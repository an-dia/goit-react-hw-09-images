{"version":3,"sources":["components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Loader/Loader.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","components/Button/Button.jsx","servises/pixabay-api.js","App.js","index.js","components/ImageGalleryItem/ImageGalleryItem.module.css"],"names":["module","exports","Searchbar","onSubmit","useState","imgName","setImgName","className","s","event","preventDefault","trim","toast","error","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","ImageGalleryItem","webformatURL","tags","onClick","src","alt","ImageGalleryItemImage","ImageGallery","images","onClose","map","id","largeImageURL","handleClick","LoaderSpinner","Container","color","height","width","modalRoot","document","querySelector","Modal","children","handleKeyDown","e","code","useEffect","window","addEventListener","removeEventListener","createPortal","Overlay","target","Button","allProps","style","textAlign","api","fetchImgPixabay","page","console","log","BASE_URL","KEY","fetch","then","response","ok","json","Status","App","state","status","showModal","onScroll","scrollTo","top","documentElement","scrollHeight","behavior","handleFormSubmit","setState","handleClickLoadMore","prevState","toggleModal","prevProps","prevImg","nextImg","this","prevPage","nextPage","pixabayApi","hits","length","Promise","reject","Error","catch","Loader","aria-label","message","autoClose","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.180be682.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1vLLO\",\"Modal\":\"Modal_Modal__25wDn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1BOZB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Loader_Container__30_Wt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__39HzO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2bpqG\",\"SearchForm\":\"Searchbar_SearchForm__1yowy\",\"SearchFormButton\":\"Searchbar_SearchFormButton__WmYL4\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__1YATX\",\"SearchFormInput\":\"Searchbar_SearchFormInput__1iulI\"};","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport s from './Searchbar.module.css';\n\nimport PropTypes from 'prop-types';\n\nconst Searchbar = ({onSubmit}) => {\n  const [imgName, setImgName] = useState('');\n  \n  const handleImgNameChange = event => {\n    setImgName(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (imgName.trim() === '') {\n      return toast.error('Please, add name pokemon!');\n    }\n\n    onSubmit(imgName);\n    setImgName('');\n  };\n\n  return (\n      <header className={s.Searchbar}>\n        <form onSubmit={handleSubmit} className={s.SearchForm}>\n          <button type=\"submit\" className={s.SearchFormButton}>\n            <span className={s.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={s.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={imgName}\n            onChange={handleImgNameChange}\n          />\n        </form>\n      </header>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n\n// export default class Searchbar extends Component {\n//   state = {\n//     imgName: '',\n//   };\n\n//   handleImgNameChange = event => {\n//     this.setState({ imgName: event.currentTarget.value.toLowerCase() });\n//   };\n\n  // handleSubmit = event => {\n  //   const { imgName } = this.state;\n  //   event.preventDefault();\n\n  //   if (imgName.trim() === '') {\n  //     return toast.error('Please, add name pokemon!');\n  //   }\n\n  //   this.props.onSubmit(imgName);\n  //   this.setState({ imgName: '' });\n  // };\n\n//   render() {\n//     const { imgName } = this.state;\n\n//     return (\n      // <header className={s.Searchbar}>\n      //   <form onSubmit={this.handleSubmit} className={s.SearchForm}>\n      //     <button type=\"submit\" className={s.SearchFormButton}>\n      //       <span className={s.SearchFormButtonLabel}>Search</span>\n      //     </button>\n\n      //     <input\n      //       className={s.SearchFormInput}\n      //       type=\"text\"\n      //       autoComplete=\"off\"\n      //       autoFocus\n      //       placeholder=\"Search images and photos\"\n      //       value={imgName}\n      //       onChange={this.handleImgNameChange}\n      //     />\n      //   </form>\n      // </header>\n//     );\n//   }\n// }\n","import PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ webformatURL, tags, onClick }) => (\n  <li className={s.ImageGalleryItem} onClick={onClick}>\n    <img src={webformatURL} alt={tags} className={s.ImageGalleryItemImage} />\n  </li>\n);\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string,\n  tags: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import s from './ImageGallery.module.css';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\n\nconst ImageGallery = ({ images, onClose }) => {\n  \n  const handleClick = largeImageURL => {\n    onClose(largeImageURL);\n  };\n  return (\n    <ul className={s.ImageGallery}>\n      {images.map(({ id, webformatURL, tags, largeImageURL }) => (\n        <ImageGalleryItem key={id} webformatURL={webformatURL} tags={tags} onClick={() => handleClick(largeImageURL)} />\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        webformatURL: PropTypes.string.isRequired,\n        tags: PropTypes.string.isRequired,\n        largeImageURL: PropTypes.string,\n      }),\n    ).isRequired,\n    onClose: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n\n// class ImageGallery extends Component {\n//   static propTypes = {\n//     images: PropTypes.arrayOf(\n//       PropTypes.shape({\n//         id: PropTypes.number,\n//         webformatURL: PropTypes.string.isRequired,\n//         tags: PropTypes.string.isRequired,\n//         largeImageURL: PropTypes.string,\n//       }),\n//     ).isRequired,\n//     onClose: PropTypes.func.isRequired,\n//   };\n\n//   handleClick = largeImageURL => {\n//     this.props.onClose(largeImageURL);\n//   };\n//   render() {\n//     const { images } = this.props;\n//     return (\n//       <ul className={s.ImageGallery}>\n//         {images.map(({ id, webformatURL, tags, largeImageURL }) => (\n//           <ImageGalleryItem key={id} webformatURL={webformatURL} tags={tags} onClick={() => this.handleClick(largeImageURL)} />\n//         ))}\n//       </ul>\n//     );\n//   }\n// }\n\n// export default ImageGallery;\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport s from './Loader.module.css';\n\nconst LoaderSpinner = () => {\n  return (\n    <div className={s.Container}>\n      <Loader type=\"BallTriangle\" color=\"#00BFFF\" height={60} width={60} />\n    </div>\n  );\n};\n\nexport default LoaderSpinner;\n\n// export default class LoaderSpinner extends Component {\n//   state = {};\n//   render() {\n//     return (\n//       <div className={s.Container}>\n//         <Loader type=\"BallTriangle\" color=\"#00BFFF\" height={60} width={60} />\n//       </div>\n//     );\n//   }\n// }\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({children, onClose}) => {\n  \n  const handleKeyDown = e => {\n    // console.log(e.code);\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown)\n\n    return  window.removeEventListener('keydown', handleKeyDown);\n  }, [handleKeyDown]);\n\n\n  const handleBackdropClick = e => {\n    // console.log(e.currentTarget);\n    // console.log(e.target);\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n\n  return ( createPortal(\n      <div className={s.Overlay} onClick={handleBackdropClick}>\n        <div className={s.Modal}>{children}</div>\n      </div>,\n      modalRoot,\n    )\n  );\n};\n\nModal.propTypes = {\n   onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n\n// export default class Modal extends Component {\n//   static propTypes = {\n//     onClose: PropTypes.func.isRequired,\n//   };\n\n//   componentDidMount() {\n//     window.addEventListener('keydown', this.handleKeyDown);\n//   }\n\n//   componentWillUnmount() {\n//     window.removeEventListener('keydown', this.handleKeyDown);\n//   }\n\n  // handleKeyDown = e => {\n  //   console.log(e.code);\n  //   if (e.code === 'Escape') {\n  //     this.props.onClose();\n  //   }\n  // };\n\n  // handleBackdropClick = e => {\n  //   console.log(e.currentTarget);\n  //   console.log(e.target);\n  //   if (e.currentTarget === e.target) {\n  //     this.props.onClose();\n  //   }\n  // };\n\n//   render() {\n//     return createPortal(\n//       <div className={s.Overlay} onClick={this.handleBackdropClick}>\n//         <div className={s.Modal}>{this.props.children}</div>\n//       </div>,\n//       modalRoot,\n//     );\n//   }\n// }\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nconst Button = ({ onClick, ...allProps }) => {\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <button className={s.Button} type=\"button\" onClick={onClick} {...allProps}>\n        Load more\n      </button>\n    </div>\n  );\n};\n\n// Button.defaultProps = {\n//   onClick: () => null,\n//   children: null,\n// }\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n  'aria-label': PropTypes.string.isRequired,\n};\n\nexport default Button;\n","function fetchImgPixabay(imgName, page = '1') {\n  console.log('imgName', imgName);\n  console.log('page', page);\n  const BASE_URL = 'https://pixabay.com/api/';\n  const KEY = '19252909-b3fce789e9067414046d74c47';\n\n  return fetch(`${BASE_URL}?q=${imgName}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`).then(\n    response => {\n      // test();\n      if (response.ok) {\n        return response.json();\n      }\n      // return Promise.reject(new Error(`Oh my god, everything is gone !!!`));\n    },\n  );\n}\n\nconst api = {\n  fetchImgPixabay,\n};\n\nexport default api;\n","import React, {Component, useState, useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PropTypes from 'prop-types';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport LoaderSpinner from './components/Loader';\nimport Modal from './components/Modal';\nimport Button from './components/Button';\nimport pixabayApi from './servises/pixabay-api';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\n// const App = props => {\n//   const [imgName, setImgName] = useState('');\n//   const [images, setImages] = useState([]);\n//   const [error, setErrosetImgNamer] = useState(null);\n//   const [status, setStatus] = useState(Status.IDLE);\n//   const [page, setPage] = useState(1);\n//   const [largeImageURL, setLargeImageURL] = useState('');\n//   const [showModal, setShowModal] = useState(false);\n\n//     const onScroll = () => {\n//     window.scrollTo({\n//       top: document.documentElement.scrollHeight,\n//       behavior: 'smooth',\n//     });\n//   };\n\n//   const handleFormSubmit = imgName => {\n//     setImgName(imgName);\n//   };\n\n//   const handleClickLoadMore = () => {\n//     setPage(prevPage => prevPage + 1);\n\n//     // this.onScroll();\n//   };\n\n//   const toggleModal = largeImageURL => {\n//     setShowModal(prevShowModal => !prevShowModal);\n//     setLargeImageURL(largeImageURL);\n//   };\n\n//   //const resetPage = () => {\n//   //   setPage(1);\n//   // }\n\n\n//   return (\n//       <div>\n//         <Searchbar onSubmit={handleFormSubmit} />\n//         {status === Status.RESOLVED && images.length !== 0 && <ImageGallery images={images} onClose={toggleModal} />}\n//         {status === Status.PENDING && <LoaderSpinner />}\n//         {status === Status.RESOLVED && images.length !== 0 && (\n//           <Button onClick={handleClickLoadMore} aria-label=\"Найти картинку\" />\n//         )}\n\n//         {showModal && (\n//           <Modal onClose={toggleModal}>\n//             <img src={largeImageURL} alt={images.tags} />\n//           </Modal>\n//         )}\n//         {status === Status.REJECTED && (\n//           <div style={{ textAlign: 'center', color: 'red' }}>\n//             <p>{error.message}</p>\n//           </div>\n//         )}\n//         <ToastContainer autoClose={3000} />\n//       </div>\n//   )\n// };\n\n// App.propTypes = {\n  \n// };\n\n// export default App;\n\nexport default class App extends Component {\n  state = {\n    imgName: '',\n    images: [],\n    error: null,\n    status: Status.IDLE,\n    page: 1,\n    largeImageURL: '',\n    showModal: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevImg = prevState.imgName;\n    const nextImg = this.state.imgName;\n    const prevPage = prevState.page;\n    const nextPage = this.state.page;\n\n    if (prevImg !== nextImg) {\n      this.setState({ images: [], page: 1, status: Status.PENDING });\n\n      pixabayApi\n        .fetchImgPixabay(nextImg)\n        .then(images => {\n          if (images.hits.length === 0) {\n            return Promise.reject(new Error(`Could not find picture for request ${nextImg}`));\n            // return this.setState({\n            //   error: `Could not find picture for request ${nextImg}`,\n            //   status: Status.REJECTED,\n            // });\n          }\n\n          window.scrollTo({ top: 0 });\n          this.setState({\n            images: images.hits,\n            status: Status.RESOLVED,\n          });\n        })\n        .catch(error => this.setState({ error, status: Status.REJECTED }));\n    }\n\n    if (prevPage !== nextPage && nextPage > 1) {\n      console.log('nextPage', prevPage);\n      console.log('nextPage', nextPage);\n      this.setState({ status: Status.PENDING });\n      pixabayApi\n        .fetchImgPixabay(nextImg, nextPage)\n        .then(images => {\n          this.setState(prevState => ({\n            images: [...prevState.images, ...images.hits],\n            status: Status.RESOLVED,\n          }));\n\n          this.onScroll();\n        })\n        .catch(error => this.setState({ error, status: Status.REJECTED }));\n      // .finally(this.onScroll);\n    }\n  }\n\n  onScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  handleFormSubmit = imgName => {\n    this.setState({ imgName });\n  };\n\n  handleClickLoadMore = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n    }));\n\n    // this.onScroll();\n  };\n\n  toggleModal = largeImageURL => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n    this.setState({ largeImageURL: largeImageURL });\n  };\n\n  // resetPage = () => {\n  //   this.setState({ page: 1 });\n  // }\n\n  render() {\n    const { images, status, showModal, largeImageURL, error } = this.state;\n    return (\n      <div>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        {status === Status.RESOLVED && images.length !== 0 && <ImageGallery images={images} onClose={this.toggleModal} />}\n        {status === Status.PENDING && <LoaderSpinner />}\n        {status === Status.RESOLVED && images.length !== 0 && (\n          <Button onClick={this.handleClickLoadMore} aria-label=\"Найти картинку\" />\n        )}\n\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img src={largeImageURL} alt={images.tags} />\n          </Modal>\n        )}\n        {status === Status.REJECTED && (\n          <div style={{ textAlign: 'center', color: 'red' }}>\n            <p>{error.message}</p>\n          </div>\n        )}\n        <ToastContainer autoClose={3000} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1yvfz\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__YZo2m\"};"],"sourceRoot":""}